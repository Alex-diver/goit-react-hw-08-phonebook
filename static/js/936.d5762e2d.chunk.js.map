{"version":3,"file":"static/js/936.d5762e2d.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectorsContacts.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { styled } from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  row-gap: 5px;\n  color: white;\n  max-width: 300px;\n  font-size: 16px;\n`;\nexport const SpanStyled = styled.span`\n  margin-bottom: 5px;\n`;\n\nexport const InputStyled = styled.input`\n  font-size: 16px;\n  border-radius: 5px solid blue;\n  padding: 5px;\n  &:focus,\n  &:hover,\n  &:active {\n    border: 2px solid blue;\n    outline: transparent;\n  }\n`;\nexport const BtnStyled = styled.button`\n  color: gray;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    border: 1px solid blue;\n    background: dodgerblue;\n    color: black;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectorsContacts';\nimport { addContact } from 'redux/contacts/operationsContacts';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  FormStyled,\n  LabelStyled,\n  SpanStyled,\n  InputStyled,\n  BtnStyled,\n} from './ContactForm.styled';\n\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name: inputName, value } = event.target;\n    if (inputName === 'name') {\n      setName(value);\n    } else if (inputName === 'number') {\n      setNumber(value);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    updateContacts({ name, number });\n    resetForm();\n  };\n  const updateContacts = ({ name, number }) => {\n    const contact = { id: nanoid(), name, number };\n    const contactExists = contacts.find(contact => {\n      return contact.name === name || contact.number === number;\n    });\n\n    contactExists\n      ? toast.info(`${name} is already in contacts.`)\n      : dispatch(addContact(contact));\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <div>\n      <FormStyled onSubmit={handleSubmit}>\n        <LabelStyled>\n          <SpanStyled>Name </SpanStyled>\n          <InputStyled\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Annie Copeland\"\n            onChange={handleChange}\n          />\n        </LabelStyled>\n        <LabelStyled>\n          <SpanStyled> Number </SpanStyled>\n          <InputStyled\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"227-91-26\"\n            onChange={handleChange}\n          />\n        </LabelStyled>\n        <BtnStyled type=\"submit\">Add contact</BtnStyled>\n      </FormStyled>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  row-gap: 10px;\n  margin: 0;\n`;\n\nexport const ItemStyled = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 15px;\n  color: white;\n  margin: 3px 0 0 auto;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 75px;\n  color: gray;\n  padding: 2px;\n  border-radius: 5px;\n  border: 1px solid;\n  margin-left: auto;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    border: 1px solid blue;\n    background: dodgerblue;\n    color: black;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectorsContacts';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/operationsContacts';\nimport { ItemStyled, DeleteButton, ListStyled } from './ContactsList.styled';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ListStyled>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ItemStyled key={id}>\n          {name}: {number}\n          <DeleteButton onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </DeleteButton>\n        </ItemStyled>\n      ))}\n    </ListStyled>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const InputStyled = styled.input`\n  font-size: 16px;\n  border-radius: 5px solid blue;\n  padding: 5px;\n  margin-bottom: 10px;\n  &:focus,\n  &:hover,\n  &:active {\n    border: 2px solid blue;\n    outline: transparent;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectorsContacts';\nimport { setFilter } from 'redux/filter/sliceFilter';\nimport { InputStyled } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <InputStyled\n      type=\"text\"\n      value={filter}\n      onChange={event => dispatch(setFilter(event.target.value.trim()))}\n    />\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 600px;\n  margin: 0 auto;\n`;\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  align-items: center;\n  padding: 20px;\n  border: 2px blue solid;\n  border-radius: 5px;\n  min-width: 350px;\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 32px;\n  text-align: center;\n  color: white;\n`;\n\nexport const ContactsTitle = styled.p`\n  margin-bottom: 10px;\n  font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  color: white;\n`;\n\nexport const FilterTitle = styled.p`\n  margin-bottom: 3px;\n  font-size: 16px;\n  text-align: center;\n  color: white;\n`;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { fetchContacts } from 'redux/contacts/operationsContacts';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  ContactsContainer,\n  ContactsTitle,\n  FilterTitle,\n  MainTitle,\n  MainContainer,\n} from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n\n      <MainContainer>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <ContactsContainer>\n          <FilterTitle>Find contacts by name</FilterTitle>\n          <Filter />\n          <ContactList />\n        </ContactsContainer>\n      </MainContainer>\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","contact","toLowerCase","includes","FormStyled","styled","_templateObject","_taggedTemplateLiteral","LabelStyled","_templateObject2","SpanStyled","_templateObject3","InputStyled","_templateObject4","BtnStyled","_templateObject5","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$target","target","inputName","updateContacts","_ref","id","nanoid","contactExists","toast","addContact","resetForm","_jsx","children","_jsxs","onSubmit","preventDefault","type","pattern","title","required","placeholder","onChange","ListStyled","ItemStyled","DeleteButton","ContactList","useEffect","fetchContacts","filteredContacts","onClick","deleteContact","Filter","setFilter","trim","MainContainer","ContactsContainer","MainTitle","ContactsTitle","FilterTitle","Contacts","_Fragment","Helmet"],"sourceRoot":""}